name: docker

on:
  push:
    branches:
      - main
    tags:
      - 'v*.*.*'
  # To keep staging updated with translations we want to deploy 4 times a day..
  schedule:
    - cron: "0 */6 * * *"

# Based on example https://github.com/marketplace/actions/build-and-push-docker-images#complete-workflow
jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: docker-tags
        id: tags
        run: |
          DOCKER_IMAGE=mozilla/sentencecollector
          VERSION=noop
          TAG_TS=$(date +%s)
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
          elif [[ $GITHUB_REF == refs/heads/* ]]; then
            VERSION=$(echo ${GITHUB_REF#refs/heads/} | sed -r 's#/+#-#g')
            if [ "$VERSION" = "main" ]; then
              VERSION=main-${GITHUB_SHA::8}-${TAG_TS}
            fi
          fi
          TAGS="${DOCKER_IMAGE}:${VERSION}"
          if [[ $VERSION =~ ^v[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
            MINOR=${VERSION%.*}
            MAJOR=${MINOR%.*}
            TAGS="$TAGS,${DOCKER_IMAGE}:${MINOR},${DOCKER_IMAGE}:${MAJOR},${DOCKER_IMAGE}:latest"
          fi
          echo ::set-output name=version::${VERSION}
          echo ::set-output name=tags::${TAGS}
          echo ::set-output name=created::$(date -u +'%Y-%m-%dT%H:%M:%SZ')
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          file: ./Dockerfile
          tags: ${{ steps.tags.outputs.tags }}
          build-args: |
            COMMIT=${{ github.sha }}
      -
        name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
